{"version":3,"sources":["redux/auth/selectors.js","redux/auth/actions.js","redux/auth/operations.js","redux/habits/operations.js","redux/habits/actions.js","routes/routes.js","routes/PrivateRoute.js","routes/PublicRoute.js","App.js","redux/auth/reducers.js","redux/habits/reducers.js","redux/store.js","index.js"],"names":["isAuth","auth","token","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","updateUserRequest","updateUserSuccess","updateUserError","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","console","log","post","response","data","message","login","logout","error","updateUser","getState","userToken","get","addHabit","habitData","habitAddRequest","newHabit","habitAddSuccess","habitAddError","getAllHAbits","getAllHabitsRequest","getAllHabitsSuccess","getAllHabitsError","deleteHabit","id","history","habitDeleteRequest","delete","habitDeleteSuccess","push","habitDeleteError","habitUpdateError","component","lazy","path","exact","key","uuid","private","restricted","connect","store","isAuthenticated","Component","routeProps","render","props","to","App","useDispatch","useEffect","className","style","width","fallback","routes","map","item","initState","phoneNumber","password","firstName","lastName","height","weight","birthday","userReducer","createReducer","_","payload","user","initSate","tokenReducer","errorReducer","combineReducers","habitError","action","habits","state","habitsState","filter","habit","config","storage","whitelist","configureStore","reducer","persistReducer","authReducer","habitsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.103c53a7.chunk.js","sourcesContent":["export const isAuth = ({ auth }) => !!auth.token;\r\n\r\n// export default {isAuth}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"REGISTER_REQUEST\");\r\nexport const registerSuccess = createAction(\"REGISTER_SUCCESS\");\r\nexport const registerError = createAction(\"REGISTER_ERROR\");\r\n\r\nexport const loginRequest = createAction(\"LOGIN_REQUEST\");\r\nexport const loginSuccess = createAction(\"LOGIN_SUCCESS\");\r\nexport const loginError = createAction(\"LOGIN_ERROR\");\r\n\r\nexport const logoutRequest = createAction(\"LOGOUT_REQUEST\");\r\nexport const logoutSuccess = createAction(\"LOGOUT_SUCCESS\");\r\nexport const logoutError = createAction(\"LOGOUT_ERROR\");\r\n\r\nexport const updateUserRequest = createAction(\"UPDATE_USER_REQUEST\");\r\nexport const updateUserSuccess = createAction(\"UPDATE_USER_SUCCESS\");\r\nexport const updateUserError = createAction(\"UPDATE_USER_ERROR\");","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  updateUserRequest,\r\n  updateUserSuccess,\r\n  updateUserError,\r\n} from './actions';\r\n\r\n// !!! URL\r\naxios.defaults.baseURL = 'https://goiteens-habits.herokuapp.com/api/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ``;\r\n  },\r\n};\r\n\r\nexport const register = credentials => async dispatch => {\r\n  console.log(credentials);\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/auth/register', credentials);\r\n    const data = response.data;\r\n    console.log(data);\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/auth/login', credentials);\r\n    const data = response.data;\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const updateUser = () => async (dispatch, getState) => {\r\n  dispatch(updateUserRequest());\r\n  try {\r\n    const userToken = getState().auth.token;\r\n    token.set(userToken);\r\n    const response = await axios.get('/auth/me');\r\n    const data = response.data;\r\n    dispatch(updateUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(updateUserError(error.message));\r\n  }\r\n};\r\n\r\n// export default { register, login, logout };\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  getAllHabitsRequest,\r\n  habitAddRequest,\r\n  getAllHabitsSuccess,\r\n  habitAddSuccess,\r\n  getAllHabitsError,\r\n  habitAddError,\r\n  habitDeleteRequest,\r\n  habitDeleteSuccess,\r\n  habitDeleteError,\r\n} from './actions';\r\n// !!! URL\r\naxios.defaults.baseURL = 'https://goiteens-habits.herokuapp.com/api';\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = ``;\r\n  },\r\n};\r\nexport const addHabit = habitData => async dispatch => {\r\n  dispatch(habitAddRequest());\r\n  console.log(`Add Habit`, habitData);\r\n  // const x = {\r\n  //   id: 0,\r\n  //   createdAt: '2021-06-06T03:49:47.204Z',\r\n  //   updatedAt: '2021-06-06T03:49:47.204Z',\r\n  //   name: 'string',\r\n  //   motivation: 'string',\r\n  //   color: '#ffffff',\r\n  //   remindMe: true,\r\n  //   repeat: 0,\r\n  //   ownerId: 0,\r\n  // };\r\n  try {\r\n    const response = await axios.post('/habits', habitData);\r\n    const newHabit = response.data;\r\n    console.log('response', newHabit);\r\n    dispatch(habitAddSuccess(newHabit));\r\n  } catch (error) {\r\n    dispatch(habitAddError(error.message));\r\n  }\r\n};\r\nexport const getAllHAbits = () => async dispatch => {\r\n  dispatch(getAllHabitsRequest());\r\n  try {\r\n    const response = await axios.get('/habits');\r\n    const data = response.data;\r\n    dispatch(getAllHabitsSuccess(data));\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch(getAllHabitsError(err.message));\r\n  }\r\n};\r\n\r\nexport const deleteHabit = (id, history) => async dispatch => {\r\n  dispatch(habitDeleteRequest());\r\n  try {\r\n    const response = await axios.delete(`/habits/${id}`);\r\n    const data = response.data;\r\n    dispatch(habitDeleteSuccess(id));\r\n    history.push('/habits')\r\n  } catch (err) {\r\n    console.log(err.message);\r\n    dispatch(habitDeleteError(err.message));\r\n  }\r\n};\r\n\r\n// export default { addHabit };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// создаем экшены для привычек\r\n\r\nexport const habitUpdateRequest = createAction('HABITUPDATE_REQUEST');\r\nexport const habitAddRequest = createAction('HABITADD_REQUEST');\r\nexport const habitDeleteRequest = createAction('HABITDELETE_REQUEST');\r\nexport const getAllHabitsRequest = createAction('GETALLHABITS_REQUEST');\r\n\r\nexport const habitUpdateSuccess = createAction('HABITUPDATE_SUCCESS');\r\nexport const habitAddSuccess = createAction('HABITADD_SUCCESS');\r\nexport const habitDeleteSuccess = createAction('HABITDELETE_SUCCESS');\r\nexport const getAllHabitsSuccess = createAction('GETALLHABITS_SUCCESS');\r\n\r\nexport const habitUpdateError = createAction('HABITUPDATE_ERROR');\r\nexport const habitAddError = createAction('HABITADD_ERROR');\r\nexport const habitDeleteError = createAction('HABITDELETE_ERROR');\r\nexport const getAllHabitsError = createAction('GETALLHABITS_ERROR');\r\n\r\n\r\n","import { lazy } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n  {\r\n    component: lazy(() => import('../pages/AuthPage/AuthPage')),\r\n    path: '/',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    component: lazy(() => import('../pages/RegisterPage/RegisterPage')),\r\n    path: '/register',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    component: lazy(() => import('../pages/LoginPage/LoginPage')),\r\n    path: '/login',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    component: lazy(() => import('../pages/UserPage/UserPage')),\r\n    path: '/user',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: true,\r\n    restricted: true,\r\n  },\r\n  {\r\n    component: lazy(() => import('../pages/HabitsPage/HabitsPage')),\r\n    path: '/habits',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: true,\r\n    restricted: false,\r\n  },\r\n  {\r\n    component: lazy(() => import('../pages/HabitItemPage/HabitItem')),\r\n    path: '/habits/:id',\r\n    exact: true,\r\n    key: uuid(),\r\n    private: true,\r\n    restricted: true,\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isAuth } from '../redux/auth/selectors';\r\n\r\nconst PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...routeProps\r\n}) => {\r\n  // console.log(Component);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props => {\r\n        // console.log(props);\r\n        return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => ({ isAuthenticated: isAuth(store) });\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { isAuth } from '../redux/auth/selectors';\r\n\r\nconst PublicRoute = ({\r\n  isAuthenticated,\r\n  restricted,\r\n  component: Component,\r\n  ...routeProps\r\n}) => {\r\n  // console.log(routeProps);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && restricted ? (\r\n          <Redirect to=\"/habits\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    isAuthenticated: isAuth(store),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { routes, PrivateRoute, PublicRoute } from './routes';\r\nimport { Switch } from 'react-router-dom';\r\nimport { Suspense, useEffect } from 'react';\r\nimport './App.css';\r\nimport { updateUser } from './redux/auth/operations';\r\nimport { getAllHAbits } from './redux/habits/operations';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(updateUser());\r\n    dispatch(getAllHAbits());\r\n  }, []);\r\n  return (\r\n    <div className=\"App\" style={{ width: 320 }}>\r\n      <Suspense fallback=\"...\">\r\n        <Switch>\r\n          {routes.map(item => {\r\n            // console.log(item);\r\n            return item.private ? (\r\n              <PrivateRoute {...item} />\r\n            ) : (\r\n              <PublicRoute restricted={item.restricted} {...item} />\r\n            );\r\n          })}\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerSuccess,\r\n  loginSuccess,\r\n  logoutSuccess,\r\n  updateUserRequest,\r\n  registerError,\r\n  loginError,\r\n  logoutError,\r\n  updateUserError,\r\n} from './actions';\r\n\r\nconst initState = {\r\n  phoneNumber: '',\r\n  password: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  height: 0,\r\n  weight: 0,\r\n  birthday: '',\r\n};\r\n\r\nconst userReducer = createReducer(initState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initState,\r\n  [updateUserRequest]: (initSate, { payload }) => {\r\n    return (initSate = { ...initSate, ...payload });\r\n  },\r\n});\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [updateUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  error: errorReducer,\r\n});\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\n// habitUpdateRequest,\r\n// habitAddRequest,\r\n// habitDeleteRequest,\r\n// getAllHabitsRequest,\r\nimport {\r\n  habitUpdateSuccess,\r\n  habitUpdateError,\r\n  habitAddSuccess,\r\n  habitAddError,\r\n  habitDeleteSuccess,\r\n  habitDeleteError,\r\n  getAllHabitsSuccess,\r\n  getAllHabitsError,\r\n} from './actions';\r\n\r\nconst initState = {\r\n  id: '',\r\n  description: '',\r\n  repeat: '',\r\n  color: '',\r\n  remind: false,\r\n};\r\n\r\n// const habit = createReducer(initState, {\r\n//   [habitAddSuccess]: (_, action) => action.payload,\r\n//   [habitUpdateSuccess]: (_, action) => action.payload,\r\n//   [habitDeleteSuccess]: () => initState,\r\n// });\r\n\r\nconst habitsState = [];\r\n\r\nconst habitError = createReducer(null, {\r\n  [getAllHabitsError]: (_, action) => {\r\n    return action.payload;\r\n  },\r\n  [habitAddError]: (_, action) => {\r\n    return action.payload;\r\n  },\r\n  [habitDeleteError]: (_, action) => {\r\n    return action.payload;\r\n  },\r\n  [habitUpdateError]: (_, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\n// const allHabits = createReducer(habitsState, {\r\n//   [getAllHabitsSuccess]: (_, action) => {\r\n//     return action.payload;\r\n//   },\r\n//   [habitAddSuccess]: (habitsState, action) => {\r\n//     return [...habitsState, action.payload];\r\n//   },\r\n//   [habitDeleteSuccess]: (habitsState, action) => {\r\n//     return habitsState.filter(habit => {\r\n//       return habit.id !== action.payload;\r\n//     });\r\n//   },\r\n//   [habitUpdateSuccess]: (habitsState, action) => {\r\n//     return habitsState.map(habit => {\r\n//       return habit.id === action.payload.id ? action.payload : habit;\r\n//     });\r\n//   },\r\n// });\r\n\r\nconst state = [];\r\nconst habits = createReducer(state, {\r\n  [getAllHabitsSuccess]: (_, { payload }) => payload,\r\n  [habitAddSuccess]: (state, { payload }) => [...state, payload],\r\n  [habitDeleteSuccess]: (habitsState, action) => {\r\n    return habitsState.filter(habit => {\r\n      return habit.id !== action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport default combineReducers({\r\n  // habit,\r\n  // allHabits,\r\n  habits,\r\n  habitError,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport authReducer from './auth/reducers';\r\nimport habitsReducer from './habits/reducers';\r\n\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst config = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(config, authReducer),\r\n    habits: habitsReducer,\r\n  },\r\n  middleware: [\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  ],\r\n});\r\nexport const persistor = persistStore(store);\r\n// export default { store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles/_shared.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n// const { store } = s;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate persistor={persistor} loading={null}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}